{"version":3,"sources":["utils/Api.js","components/container.js","App.js","reportWebVitals.js","index.js"],"names":["usersList","console","log","axios","get","UserContainer","props","handleSearch","bind","returnSortDirection","handleSort","sort","state","users","search","sortDirection","col","this","className","aria-hidden","API","then","res","data","results","map","user","name","first","last","picture","thumbnail","email","age","dob","setState","e","target","value","toUpperCase","second","filter","item","includes","filterUsers","index","src","alt","onChange","type","placeholder","aria-label","aria-describedby","Table","onClick","renderList","React","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.94410270.chunk.js","sourcesContent":["import axios from \"axios\";\r\n//fetch random user\r\nfunction usersList() {\r\n    console.log('in use usersList');\r\n  return axios.get(\"https://randomuser.me/api/?results=200&nat=US\");\r\n}\r\n\r\nexport default {\r\n  usersList\r\n};","import React from \"react\";\r\nimport \"./style.css\";\r\nimport API from \"../utils/Api\";\r\nimport { Table } from 'react-bootstrap';\r\n\r\nclass UserContainer extends React.Component {\r\n    //set initial state\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleSearch = this.handleSearch.bind(this);\r\n        this.returnSortDirection = this.returnSortDirection.bind(this);\r\n        this.handleSort = this.handleSort.bind(this);\r\n        this.sort = this.sort.bind(this);\r\n        this.state = {\r\n            users: [],\r\n            search: \"\",\r\n            sortDirection: \"\",\r\n            col: \"\"\r\n        };\r\n    }\r\n    //this method returns font awesome arrow for sorting\r\n    returnSortDirection(col) {\r\n        if (this.state.col === col && this.state.sortDirection === \"desc\") {\r\n            return <i className=\"fa fa-sort-desc\" aria-hidden=\"true\"></i>\r\n        }\r\n        if (this.state.col === col && this.state.sortDirection === \"asc\") {\r\n            return <i className=\"fa fa-sort-asc\" aria-hidden=\"true\"></i>\r\n        }\r\n    }\r\n    //call api at application loading\r\n    componentDidMount() {\r\n        console.log('in use effect');\r\n        API.usersList().then(res => {\r\n            console.log(res);\r\n            let users = res.data.results.map(user => {\r\n                return {\r\n                    name: user.name.first + ' ' + user.name.last,\r\n                    picture: user.picture.thumbnail,\r\n                    email: user.email,\r\n                    age: user.dob.age\r\n                }\r\n            });\r\n            this.setState({ users: users });\r\n        });\r\n    }\r\n    //set the state for search criteria\r\n    handleSearch(e) {\r\n        this.setState({ search: e.target.value.toUpperCase() });\r\n    }\r\n    //handle the sorting state ascending and descending, it also handles columns stat\r\n    handleSort(value) {\r\n        this.state.col === value && this.state.sortDirection === \"asc\" ?\r\n            this.setState({ col: value, sortDirection: \"desc\" })\r\n            : this.setState({ col: value, sortDirection: \"asc\" })\r\n    }\r\n    //sort based on column clicked\r\n    sort(first, second) {\r\n        if (first[this.state.col] > second[this.state.col]) {\r\n            return this.state.sortDirection === \"asc\" ? 1 : -1;\r\n        }\r\n        if (first[this.state.col] < second[this.state.col]) {\r\n            return this.state.sortDirection === \"asc\" ? -1 : 1;\r\n        }\r\n        return 0;\r\n    }\r\n    //filter the employees list\r\n    filterUsers() {\r\n        console.log(this.state.search);\r\n        return this.state.users.filter((item) => item.name.toUpperCase().includes(this.state.search));\r\n    }\r\n    //dynamic rendering of employee info\r\n    renderList() {\r\n        return this.filterUsers().sort(this.sort).map((user, index) => {\r\n            return (\r\n                <tr key={index}>\r\n                    <td><img src={user.picture} alt=\"employee\"></img></td>\r\n                    <td>{user.name}</td>\r\n                    <td>{user.email}</td>\r\n                    <td>{user.age}</td>\r\n                </tr>\r\n            );\r\n        });\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <nav className=\"navbar navbar-light bg-primary\">\r\n                    <span className=\"navbar-brand mb-0 h1 \"><h1>Employee Directory</h1></span>                \r\n                        <input\r\n                            onChange={this.handleSearch}\r\n                            type=\"search\"\r\n                            className=\"form-control m-3\"\r\n                            placeholder=\"Search\"\r\n                            aria-label=\"SearchBox\"\r\n                            aria-describedby=\"basic-addon1\"\r\n                        />\r\n                </nav>\r\n                <div className=\"table m-3\">\r\n                    <Table className=\"table table-striped\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Picture </th>\r\n                                <th className=\"clickable\" onClick={() => {\r\n                                    this.handleSort(\"name\");\r\n                                }}>Name    {this.returnSortDirection(\"name\")}</th>\r\n                                <th className=\"clickable\" onClick={() => {\r\n                                    this.handleSort(\"email\");\r\n                                }}>Email   {this.returnSortDirection(\"email\")}</th>\r\n                                <th className=\"clickable\" onClick={() => {\r\n                                    this.handleSort(\"age\");\r\n                                }}>Age     {this.returnSortDirection(\"age\")}</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.renderList()}\r\n                        </tbody>\r\n                    </Table>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UserContainer;","import UserContainer from './components/container'\n\nfunction App() {\n  return <>\n  <UserContainer/> \n  </>\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport 'font-awesome/css/font-awesome.min.css'\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}